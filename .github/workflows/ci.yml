name: CI

on: [push, pull_request]
permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: read
jobs:
  report-diff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get PR Diff
        id: diff
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff --numstat origin/${{ github.base_ref }} > diff.txt
          TOTAL_LINES=$(awk '{ added += $1; removed += $2 } END { print added+removed }' diff.txt)
          echo "total-lines=$TOTAL_LINES" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const totalLines = ${{ steps.diff.outputs.total-lines }};
            const warning = `> [!WARNING]\n> The code changes are nearly 400 lines. Reviewers, please review carefully.\n> Reviewees, try to keep changes under 300 lines.`;
            const caution =`> [!CAUTION]\n> The code changes exceed 400 lines. This amount of changes may increase the risk of bugs.\n> Reviewees might find it easier to review if the pull request is split.`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Total Lines Changed:** ${totalLines}
              ${totalLines > 400 ? caution : totalLines > 300 ? warning:""}
              `
            });
  install-dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: install modules
        uses: ./.github/actions/module-ci

  lint:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Cached Dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Lint
        run: npm run lint

  test:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Cached Dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test:unit
  build:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Cached Build
        id: cached-build
        uses: actions/cache@v4
        with:
          path: '**/.next'
          key: ${{ runner.os }}-npm-build-${{ github.sha }}

      - name: Use Cached Dependencies
        if: steps.cached-build.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        if: steps.cached-build.outputs.cache-hit != 'true'
        run: npm run build

  bundle-analysis:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: oven-sh/setup-bun@v1
      - name: Use Cached Build
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Build next.js app
        run: ./node_modules/.bin/next build

      - name: Analyze bundle
        run: npx -p nextjs-bundle-analysis report

      - name: Upload bundle
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: .next/analyze/__bundle_analysis.json

      - name: Download base branch bundle stats
        uses: dawidd6/action-download-artifact@v2
        if: success() && github.event.number
        with:
          workflow: nextjs_bundle_analysis.yml
          path: .next/analyze/base
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: bundle
          check_artifacts: true
          search_artifacts: true

      - name: Compare with base branch bundle
        if: success() && github.event.number
        run: ls -laR .next/analyze/base && npx -p nextjs-bundle-analysis compare

      - name: Get Comment Body
        id: get-comment-body
        if: success() && github.event.number
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        run: |
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$(cat .next/analyze/__bundle_analysis_comment.txt)" >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '<!-- __NEXTJS_BUNDLE -->'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v2
        if: success() && github.event.number && steps.fc.outputs.comment-id == 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v2
        if: success() && github.event.number && steps.fc.outputs.comment-id != 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace

  lighthouse:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Cached Build
        uses: actions/cache@v4
        with:
          path: '**/.next'
          key: ${{ runner.os }}-npm-build-${{ github.sha }}

      - name: Use Cached Dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Run Lighthouse
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
          configPath: ./lighthouserc.json
      - name: Create Lighthouse Comment
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const results = ${{steps.lighthouse.outputs.manifest}}
            const table = `
              | URL | Performance | Accessibility | Best Practices | SEO | PWA |
              | --- | ----------- | ------------- | -------------- | --- | --- |
              ${results.map(result => `| ${result.url} | ${result.summary.performance * 100} | ${result.summary.accessibility * 100} | ${result.summary['best-practices']* 100} | ${result.summary.seo* 100} | ${result.summary.pwa* 100} |`).join('\n')}
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: table
            });
